name: Build
on: [push, pull_request]

jobs:
    build-linux-with-docker:
        name: Linux(With Dockerfile)
        runs-on: ubuntu-latest
        timeout-minutes: 15
        env:
          # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
          BUILD_TYPE: Release
        steps:
            - uses: actions/checkout@v4
           
            # 构建 Docker 镜像
            - name: Build Docker image
              run: docker build -t gpupixel_img .
 
            # 使用Docker运行Linux构建脚本
            - name: Build with Linux script
              run: |
                mkdir -p output build
                docker run --rm \
                  -v $(pwd)/output:/workspace/output \
                  -v $(pwd)/build:/workspace/build \
                  -v $(pwd)/script:/workspace/script \
                  -v $(pwd):/workspace \
                  gpupixel_img

    build-macos-clang:
        name: macOS (Universal)
        runs-on: macos-latest
        timeout-minutes: 15
        env:
            BUILD_TYPE: Release
            CMAKE_OSX_ARCHITECTURES: x86_64;arm64
        steps:
            - uses: actions/checkout@v4
            
            # 授予脚本执行权限
            - name: Grant execute permission for scripts
              run: chmod +x ${{github.workspace}}/script/*.sh
              
            # 使用macOS构建脚本
            - name: Build with macOS script
              run: ${{github.workspace}}/script/build_macos.sh
    
    build-ios-clang:
        name: iOS (Arm64)
        runs-on: macos-latest
        timeout-minutes: 15
        env:
            BUILD_TYPE: Release
        steps:
            - uses: actions/checkout@v4
            
            # 授予脚本执行权限
            - name: Grant execute permission for scripts
              run: chmod +x ${{github.workspace}}/script/*.sh
              
            # 使用iOS构建脚本
            - name: Build with iOS script
              run: ${{github.workspace}}/script/build_ios.sh
              
    build-windows-cl:
        name: Windows (MSCV CL.EXE)
        runs-on: windows-latest
        timeout-minutes: 15
        env:
            BUILD_TYPE: Release
        steps:
            - uses: actions/checkout@v4

           # 配置MSVC环境为x64
            - name: Setup MSVC environment
              uses: ilammy/msvc-dev-cmd@v1
              with:
                arch: x64

            # 使用Windows构建脚本
            - name: Build with Windows script
              run: .\script\build_windows.bat

    build-android-gradle:
        name: Android (Arm64-v8a)
        runs-on: ubuntu-latest
        timeout-minutes: 15
        env:
            BUILD_TYPE: Release
        steps:
            - uses: actions/checkout@v4
         
            - name: Set up JDK 11
              uses: actions/setup-java@v3
              with:
                java-version: '11'
                distribution: 'temurin'
                cache: gradle

            # 授予脚本执行权限
            - name: Grant execute permission for scripts
              run: chmod +x ${{github.workspace}}/script/*.sh
              
            # 使用Android构建脚本
            - name: Build with Android script
              run: ${{github.workspace}}/script/build_android.sh

